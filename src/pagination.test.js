const { generatePagination } = require("./pagination");

const cases = [
  // totalPages: 1
  [1, 1, ["current"]],
  // totalPages: 2
  [1, 2, ["current", 2]],
  [2, 2, [1, "current"]],
  // totalPages: 3
  [1, 3, ["current", 2, 3]],
  [2, 3, [1, "current", 3]],
  [3, 3, [1, 2, "current"]],
  // totalPages: 4
  [1, 4, ["current", 2, 3, 4]],
  [2, 4, [1, "current", 3, 4]],
  [3, 4, [1, 2, "current", 4]],
  [4, 4, [1, 2, 3, "current"]],
  // totalPages: 5
  [1, 5, ["current", 2, 3, 4, 5]],
  [2, 5, [1, "current", 3, 4, 5]],
  [3, 5, [1, 2, "current", 4, 5]],
  [4, 5, [1, 2, 3, "current", 5]],
  [5, 5, [1, 2, 3, 4, "current"]],
  // totalPages: 6
  [1, 6, ["current", 2, 3, "_", 6]],
  [2, 6, [1, "current", 3, 4, 5, 6]],
  [3, 6, [1, 2, "current", 4, 5, 6]],
  [4, 6, [1, 2, 3, "current", 5, 6]],
  [5, 6, [1, 2, 3, 4, "current", 6]],
  [6, 6, [1, "_", 4, 5, "current"]],
  // totalPages: 7
  [1, 7, ["current", 2, 3, "_", 7]],
  [2, 7, [1, "current", 3, 4, "_", 7]],
  [3, 7, [1, 2, "current", 4, 5, 6, 7]],
  [4, 7, [1, 2, 3, "current", 5, 6, 7]],
  [5, 7, [1, 2, 3, 4, "current", 6, 7]],
  [6, 7, [1, "_", 4, 5, "current", 7]],
  [7, 7, [1, "_", 5, 6, "current"]],

  // totalPages: 8
  [1, 8, ["current", 2, 3, "_", 8]],
  [2, 8, [1, "current", 3, 4, "_", 8]],
  [3, 8, [1, 2, "current", 4, 5, "_", 8]],
  [4, 8, [1, 2, 3, "current", 5, 6, 7, 8]],
  [5, 8, [1, 2, 3, 4, "current", 6, 7, 8]],
  [6, 8, [1, "_", 4, 5, "current", 7, 8]],
  [7, 8, [1, "_", 5, 6, "current", 8]],
  [8, 8, [1, "_", 6, 7, "current"]],

  // totalPages: 9
  [1, 9, ["current", 2, 3, "_", 9]],
  [2, 9, [1, "current", 3, 4, "_", 9]],
  [3, 9, [1, 2, "current", 4, 5, "_", 9]],
  [4, 9, [1, 2, 3, "current", 5, 6, "_", 9]],
  [5, 9, [1, 2, 3, 4, "current", 6, 7, 8, 9]],
  [6, 9, [1, "_", 4, 5, "current", 7, 8, 9]],
  [7, 9, [1, "_", 5, 6, "current", 8, 9]],
  [8, 9, [1, "_", 6, 7, "current", 9]],
  [9, 9, [1, "_", 7, 8, "current"]],

  // totalPages: 10
  [1, 10, ["current", 2, 3, "_", 10]],
  [2, 10, [1, "current", 3, 4, "_", 10]],
  [3, 10, [1, 2, "current", 4, 5, "_", 10]],
  [4, 10, [1, 2, 3, "current", 5, 6, "_", 10]],
  [5, 10, [1, 2, 3, 4, "current", 6, 7, "_", 10]],
  [6, 10, [1, "_", 4, 5, "current", 7, 8, 9, 10]],
  [7, 10, [1, "_", 5, 6, "current", 8, 9, 10]],
  [8, 10, [1, "_", 6, 7, "current", 9, 10]],
  [9, 10, [1, "_", 7, 8, "current", 10]],
  [10, 10, [1, "_", 8, 9, "current"]],

  // totalPages: 11
  [1, 11, ["current", 2, 3, "_", 11]],
  [2, 11, [1, "current", 3, 4, "_", 11]],
  [3, 11, [1, 2, "current", 4, 5, "_", 11]],
  [4, 11, [1, 2, 3, "current", 5, 6, "_", 11]],
  [5, 11, [1, 2, 3, 4, "current", 6, 7, "_", 11]],
  [6, 11, [1, "_", 4, 5, "current", 7, 8, "_", 11]],
  [7, 11, [1, "_", 5, 6, "current", 8, 9, 10, 11]],
  [8, 11, [1, "_", 6, 7, "current", 9, 10, 11]],
  [9, 11, [1, "_", 7, 8, "current", 10, 11]],
  [10, 11, [1, "_", 8, 9, "current", 11]],
  [11, 11, [1, "_", 9, 10, "current"]],

  // totalPages: 12
  [1, 12, ["current", 2, 3, "_", 12]],
  [2, 12, [1, "current", 3, 4, "_", 12]],
  [3, 12, [1, 2, "current", 4, 5, "_", 12]],
  [4, 12, [1, 2, 3, "current", 5, 6, "_", 12]],
  [5, 12, [1, 2, 3, 4, "current", 6, 7, "_", 12]],
  [6, 12, [1, "_", 4, 5, "current", 7, 8, "_", 12]],
  [7, 12, [1, "_", 5, 6, "current", 8, 9, "_", 12]],
  [8, 12, [1, "_", 6, 7, "current", 9, 10, 11, 12]],
  [9, 12, [1, "_", 7, 8, "current", 10, 11, 12]],
  [10, 12, [1, "_", 8, 9, "current", 11, 12]],
  [11, 12, [1, "_", 9, 10, "current", 12]],
  [12, 12, [1, "_", 10, 11, "current"]],

  // totalPages: 13
  [1, 13, ["current", 2, 3, "_", 13]],
  [2, 13, [1, "current", 3, 4, "_", 13]],
  [3, 13, [1, 2, "current", 4, 5, "_", 13]],
  [4, 13, [1, 2, 3, "current", 5, 6, "_", 13]],
  [5, 13, [1, 2, 3, 4, "current", 6, 7, "_", 13]],
  [6, 13, [1, "_", 4, 5, "current", 7, 8, "_", 13]],
  [7, 13, [1, "_", 5, 6, "current", 8, 9, "_", 13]],
  [8, 13, [1, "_", 6, 7, "current", 9, 10, "_", 13]],
  [9, 13, [1, "_", 7, 8, "current", 10, 11, 12, 13]],
  [10, 13, [1, "_", 8, 9, "current", 11, 12, 13]],
  [11, 13, [1, "_", 9, 10, "current", 12, 13]],
  [12, 13, [1, "_", 10, 11, "current", 13]],
  [13, 13, [1, "_", 11, 12, "current"]],

  // totalPages: 14
  [1, 14, ["current", 2, 3, "_", 14]],
  [2, 14, [1, "current", 3, 4, "_", 14]],
  [3, 14, [1, 2, "current", 4, 5, "_", 14]],
  [4, 14, [1, 2, 3, "current", 5, 6, "_", 14]],
  [5, 14, [1, 2, 3, 4, "current", 6, 7, "_", 14]],
  [6, 14, [1, "_", 4, 5, "current", 7, 8, "_", 14]],
  [7, 14, [1, "_", 5, 6, "current", 8, 9, "_", 14]],
  [8, 14, [1, "_", 6, 7, "current", 9, 10, "_", 14]],
  [9, 14, [1, "_", 7, 8, "current", 10, 11, "_", 14]],
  [10, 14, [1, "_", 8, 9, "current", 11, 12, 13, 14]],
  [11, 14, [1, "_", 9, 10, "current", 12, 13, 14]],
  [12, 14, [1, "_", 10, 11, "current", 13, 14]],
  [13, 14, [1, "_", 11, 12, "current", 14]],
  [14, 14, [1, "_", 12, 13, "current"]],

  // totalPages: 15
  [1, 15, ["current", 2, 3, "_", 15]],
  [2, 15, [1, "current", 3, 4, "_", 15]],
  [3, 15, [1, 2, "current", 4, 5, "_", 15]],
  [4, 15, [1, 2, 3, "current", 5, 6, "_", 15]],
  [5, 15, [1, 2, 3, 4, "current", 6, 7, "_", 15]],
  [6, 15, [1, "_", 4, 5, "current", 7, 8, "_", 15]],
  [7, 15, [1, "_", 5, 6, "current", 8, 9, "_", 15]],
  [8, 15, [1, "_", 6, 7, "current", 9, 10, "_", 15]],
  [9, 15, [1, "_", 7, 8, "current", 10, 11, "_", 15]],
  [10, 15, [1, "_", 8, 9, "current", 11, 12, "_", 15]],
  [11, 15, [1, "_", 9, 10, "current", 12, 13, 14, 15]],
  [12, 15, [1, "_", 10, 11, "current", 13, 14, 15]],
  [13, 15, [1, "_", 11, 12, "current", 14, 15]],
  [14, 15, [1, "_", 12, 13, "current", 15]],
  [15, 15, [1, "_", 13, 14, "current"]],
];

// change this number if you want to test specific totalPages only.
const TEST_ONLY = 0;

const filteredcases = TEST_ONLY ? cases.filter((arr) => arr[1] === TEST_ONLY) : null;
test.each(filteredcases || cases)("generatePagination(%i, %i)", (a, b, expected) => {
  expect(generatePagination(a, b)).toEqual(expected);
});

test("different labels", () => {
  expect(generatePagination(6, 11, "PAGE", "GAP")).toEqual([1, "GAP", 4, 5, "PAGE", 7, 8, "GAP", 11]);
});
